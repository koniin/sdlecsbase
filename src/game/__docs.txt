

 next:
    = Goal: 
	
	- shields (takes damage first and can regenerate)
		- regen amount / regen timer
		- Hull needs to be defense or something
 		- aka bucklew event based damage dealing
		- display shield with hull like  100 / 100 (hull / shield)
		- gfx for shield ( something above with blend or in front etc )

	

	- spawn in ships at start of battle (warp them in)

	- Simple ship to ship battle
		- different weapons for fighter ships
			- some buttons to click for "special weapons" / shields etc (like FTL)
			- maybe AOE and targeted with click 
			- guided missiles
			- defensive measures etc
		- hit/miss/accuracy/crit
		- damage range for weapons? 8-12 etc
		- shield + armor combo (shield regenerates)
		- borderlands weapons [ damage, accuracy, reload time | fire rate (shots/s), projectile count (for burst etc) ]
		- borderlands shield [ regenerates slow ]
			shield regeneration starts after x amount of time
			so if you don't get hit it will start after some time
			"abilities" to not take damage
			"abilities/items" to buff shields (regeneration amount, time, start time etc)
		- you could have different "deployment zones" like front, middle and back and that is the distance to the enemy ships
			which could be good depending on what kind of stats the ship hans

Dynamic components
	- dynamic component = move the entity to another list
	- have a linked thing in another list or add the entity reference to another list 
	- or add an item to another list with reference to the entity somehow


Click handlers
================
	(Note: I also want to handle mouse overs, so your method may differ if you don't)
	I define the following components:
	MouseOverTarget, MouseOver, ClickTarget, Clicked, ClickHandled

	I have the following systems:
	MouseOverSystem - goes through all MouseOverTarget entities and adds/removes MouseOver where appropriate
	ClickSystem - goes through MouseOver+ClickTarget and adds Clicked if LMB was pressed.

	then for each kind of clickable entity in my game I have systems like
	CardMouseOverSystem - goes through all Card+MouseOver, (e.g. highlights the card)
	CardClickSystem - goes through all Card+Clicked+Not(ClickHandled), does whatever it needs (this is your "OnClick" method) and adds ClickHandled. 
    (For example, in my case it adds a Dragged component for Drag&Drop).

	Oh, and the ClickSystem also cleans up Clicked+ClickHandled pairs (just removes them).

	I would assume when the ECS matures you will get all but the entity-kind-specific systems built in (just like you don't have to call OnClick yourself in the UI system). 
    Or maybe they will come up with a better method. 
